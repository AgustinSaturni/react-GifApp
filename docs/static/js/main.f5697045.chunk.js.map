{"version":3,"sources":["Componentes/AddCategory.js","helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","valorInicial","setState","onSubmit","event","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","useEffect","then","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAiCC,mBAAS,kBAA1C,mBAAOC,EAAP,KAAqBC,EAArB,KAmBA,OACI,aADgB,CAChB,QAAMC,SAZS,SAACC,GAChBA,EAAMC,iBACHJ,EAAaK,OAAOC,OAAQ,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAqBO,OAC7CN,EAAS,MAQb,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAcU,SAnB3B,SAACP,GAElBF,EAASE,EAAMQ,OAAOF,a,+BCVjBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAGJC,EAHI,iDAG0CC,UAAUH,GAHpD,+DAISI,MAAMF,GAJf,cAIJG,EAJI,gBAKWA,EAAKC,OALhB,uBAKHC,EALG,EAKHA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZhC,kBAiBHM,GAjBG,4CAAF,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAHO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAErB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcjC,EAAd,KAYA,OAPAkC,qBAAU,WACPvB,EAAQC,GAAWuB,MAAK,SAAAb,GAAG,OAAItB,EAAS,CACpCmB,KAAMG,EACNU,SAAS,SAEb,CAACpB,IAEGqB,EDTuBG,CAAaxB,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,EAAS,mBAAGJ,UAAU,mCAAb,qBAA8D,KACxE,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAAAgB,GAAK,OAAM,cAAC,EAAD,eAAgCA,GAAdA,EAAMd,aEbnDe,EAAe,WAGxB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAWA,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAACT,GAAD,OAAa,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCpB5D2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f5697045.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategorias}) => { //recibo funcion que mandÃ©\r\n    const [valorInicial, setState] = useState('Ingresar valor'); //defino el estado del componente\r\n\r\n    const handleChange = (event)=>{      //Este me actualiza mi estado con cada char que escribo en el box.\r\n\r\n        setState(event.target.value)\r\n\r\n    }\r\n\r\n    const handleSubmit=(event)=>{       //este usa la funcion que viene como argumento y agrega al estado del otro componente un elemento mas.\r\n        event.preventDefault();\r\n        if(valorInicial.trim().length >2){\r\n            setCategorias(categorias => [valorInicial,...categorias]);\r\n            setState('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    return (            //este onSubmit actua cuando aprieto enter.\r\n        <form onSubmit={handleSubmit}> \r\n            <input type=\"text\" value={valorInicial} onChange={handleChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategorias: PropTypes.func.isRequired\r\n\r\n}","export const getGifs= async(categoria)=>{\r\n       \r\n    //-------------------------------------------------------------------\r\n            const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=yFefouYUSxLH3nbQyF4EBuejU3oxuTwx`;\r\n            const resp = await fetch(url);              //todo esto es llamado a la pai\r\n            const {data} = await resp.json();\r\n    //--------------------------------------------------------------------\r\n            const gifs = data.map(img => {\r\n    \r\n                return{ \r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images?.downsized_medium.url\r\n                }\r\n    \r\n            })\r\n    \r\n            return gifs;\r\n        }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n \r\n    const {data:images, loading} =useFetchGifs(categoria);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n            {loading? <p className=\"animate__animated animate__flash\">Loading</p> : null} \r\n            <div className=\"card-grid\">\r\n              {\r\n                  images.map(image =>  (<GifGridItem key={image.id} {...image} />) )\r\n              }\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect(() => {   //Esto se dispara solo cuando cambia la categoria que esta entre corchetes.\r\n       getGifs(categoria).then(img => setState({\r\n           data: img,\r\n           loading: false\r\n       }))\r\n    }, [categoria]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { GifGrid } from './Componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n//------Defino mi estado------------\r\n    const [categorias, setCategorias] = useState(['One Punch']); \r\n//-----------------------------------------------\r\n\r\n\r\n\r\n//---------------Como agregar un elemento a un array-----------------------\r\n    /* const AgregarElemento = () => {\r\n        setCategorias([...categorias,'Dexter']); //Cuando uso el set, cambio el estado a lo que ponga dentro de los parentesis.\r\n    } */\r\n//-------------------------------\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <AddCategory setCategorias={setCategorias} />\r\n          <hr/>\r\n          \r\n          <ol>\r\n              {\r\n                  categorias.map((categoria)=><GifGrid key={categoria} categoria={categoria} /> )\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}